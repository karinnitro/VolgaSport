import tkinter as tk
from tkinter import ttk, messagebox, font
import sqlite3
import hashlib

import tkinter as tk

def create_rounded_entry(parent, width=250, height=35, radius=15, bg_color="#ffffff", border_color="#72a8fe", is_password=False):
    # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    frame = tk.Frame(parent, bg='#f5f5f5')
    
    # Canvas –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
    canvas = tk.Canvas(
        frame,
        width=width,
        height=height,
        bg='#f5f5f5',
        highlightthickness=0
    )
    canvas.pack()

    # 1. –†–∏—Å—É–µ–º –ø–æ–ª–Ω—É—é –±–µ–ª—É—é –∑–∞–ª–∏–≤–∫—É (–æ–≤–∞–ª + –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫)
    # –õ–µ–≤—ã–π –ø–æ–ª—É–∫—Ä—É–≥ —Å –∑–∞–ª–∏–≤–∫–æ–π
    canvas.create_oval(
        0, 0,
        radius*2, height,
        outline='',  # –ë–µ–∑ –∫–æ–Ω—Ç—É—Ä–∞
        fill=bg_color
    )
    # –ü—Ä–∞–≤—ã–π –ø–æ–ª—É–∫—Ä—É–≥ —Å –∑–∞–ª–∏–≤–∫–æ–π
    canvas.create_oval(
        width-radius*2, 0,
        width, height,
        outline='',
        fill=bg_color
    )
    # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫
    canvas.create_rectangle(
        radius, 0,
        width-radius, height,
        outline='',
        fill=bg_color
    )

    # 2. –†–∏—Å—É–µ–º –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–≤–µ—Ä—Ö –∑–∞–ª–∏–≤–∫–∏
    # –õ–µ–≤—ã–π –ø–æ–ª—É–∫—Ä—É–≥ (—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç—É—Ä)
    canvas.create_arc(
        0, 0,
        radius*2, height,
        start=90, extent=180,
        outline=border_color,
        fill='',
        width=1.5,
        style="arc"
    )
    # –ü—Ä–∞–≤—ã–π –ø–æ–ª—É–∫—Ä—É–≥ (—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç—É—Ä)
    canvas.create_arc(
        width-radius*2, 0,
        width, height,
        start=270, extent=180,
        outline=border_color,
        fill='',
        width=1.5,
        style="arc"
    )
    # –í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞
    canvas.create_line(
        radius, 0,
        width-radius, 0,
        fill=border_color,
        width=1
    )
    # –ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞
    canvas.create_line(
        radius, height,
        width-radius, height,
        fill=border_color,
        width=2
    )

    # –ü–æ–ª–µ –≤–≤–æ–¥–∞
    entry = tk.Entry(
        frame,
        bd=0,
        bg=bg_color,
        font=('Segoe UI', 14),
        highlightthickness=0,
        relief='flat',
        show='*' if is_password else ''  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–≤–µ–∑–¥–æ—á–∫–∏ –¥–ª—è –ø–∞—Ä–æ–ª—è
    )
    entry.place(x=radius+5, y=height//2-10, width=width-radius*2-10, height=20)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞–∑–∞ –ø–∞—Ä–æ–ª—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª–µ–π –ø–∞—Ä–æ–ª—è
    if is_password:
        def toggle_password():
            if entry.cget('show') == '*':
                entry.config(show='')
                eye_btn.config(text='üîí')  # –ü–∞—Ä–æ–ª—å –≤–∏–¥–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "—Å–∫—Ä—ã—Ç—å"
            else:
                entry.config(show='*')
                eye_btn.config(text='üîì')  # –ü–∞—Ä–æ–ª—å —Å–∫—Ä—ã—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "–ø–æ–∫–∞–∑–∞—Ç—å"
        
        eye_btn = tk.Button(
            frame,
            text='üîì',  # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - "–ø–æ–∫–∞–∑–∞—Ç—å" (–ø–∞—Ä–æ–ª—å —Å–∫—Ä—ã—Ç)
            font=('Segoe UI', 10),
            command=toggle_password,
            bg=bg_color,
            bd=0,
            relief='flat',
            activebackground=bg_color
        )
        eye_btn.place(x=width-30, y=height//2-10, width=25, height=20)
    return frame, entry

def init_db():
    '''–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'''
    conn = sqlite3.connect('sports_store.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT UNIQUE NOT NULL,
            password TEXT NOT NULL,
            loyalty_points INTEGER DEFAULT 0)''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS products (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            category TEXT NOT NULL,
            price REAL NOT NULL,
            quantity INTEGER NOT NULL,
            description TEXT)''')
    conn.commit()
    conn.close()


def hash_password(password):
    '''–•—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è'''
    return hashlib.sha256(password.encode()).hexdigest()


def delete_account():
    '''–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞'''
    def confirm_delete():
        username = delete_username_entry.get()
        password = delete_password_entry.get()
        if not username or not password:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å!")
            return
        conn = sqlite3.connect('sports_store.db')
        cursor = conn.cursor()
        cursor.execute(
            'SELECT password FROM users WHERE username = ?', (username,))
        result = cursor.fetchone()

        if result and hash_password(password) == result[0]:
            try:
                cursor.execute(
                    'DELETE FROM users WHERE username = ?', (username,))
                conn.commit()
                messagebox.showinfo("–£—Å–ø–µ—Ö", "–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
                delete_window.destroy()
            except sqlite3.Error as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
            finally:
                conn.close()
        else:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!")
            conn.close()

    # –û–∫–Ω–æ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
    delete_window = tk.Toplevel(root)
    delete_window.title("–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞")
    delete_window.geometry("800x600")
    delete_window.minsize(800, 600)
    delete_window.configure(bg='#f5f5f5')
    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
    window_width = 800
    window_height = 600
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    center_x = int(screen_width/2 - window_width/2)
    center_y = int(screen_height/2 - window_height/2)
    delete_window.geometry(
        f'{window_width}x{window_height}+{center_x}+{center_y}')

    # –°—Ç–∏–ª—å –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    style = ttk.Style(delete_window)
    style.theme_use('clam')

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
    style.configure('TFrame', background='#f5f5f5')
    style.configure('TLabel', background='#f5f5f5',
                    foreground='#333333', font=('Segoe UI', 12))
    style.configure('Large.TLabel', font=('Segoe UI', 14),
                    background='#f5f5f5', foreground='#333333')
    style.configure('Large.TEntry', font=('Segoe UI', 12), padding=8, bordercolor='#cccccc',
                    lightcolor='#cccccc', darkcolor='#cccccc', relief='flat')
    style.map('Large.TEntry',
              fieldbackground=[('active', '#ffffff'),
                               ('!disabled', '#ffffff')],
              foreground=[('active', '#333333'), ('!disabled', '#333333')])
    style.configure('Large.TButton', font=('Segoe UI', 14, 'bold'), padding=6,
                background="#72a8fe", foreground='white', borderwidth=0,
                focusthickness=3, focuscolor='#72a8fe')
    style.map('Large.TButton',
                background=[('active', '#72a8fe'), ('!disabled', '#72a8fe')],
                foreground=[('active', 'white'), ('!disabled', 'white')])

    # –§—Ä–µ–π–º –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    main_frame = tk.Frame(root, bg='#f5f5f5')
    main_frame.pack(expand=True, fill='both', padx=100, pady=100)

    ttk.Label(main_frame, text="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
              style='Large.TLabel').pack(pady=10)
    delete_username_entry = ttk.Entry(main_frame, style='Large.TEntry')
    delete_username_entry.pack(pady=10, ipady=8, fill='x')

    ttk.Label(main_frame, text="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:",
              style='Large.TLabel').pack(pady=10)
    delete_password_entry = ttk.Entry(
        main_frame, show="*", style='Large.TEntry')
    delete_password_entry.pack(pady=10, ipady=8, fill='x')

    # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã
    buttons_frame = ttk.Frame(main_frame, style='TFrame')
    buttons_frame.pack(pady=20)

    ttk.Button(buttons_frame, text="–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç",
               command=confirm_delete, style='Large.TButton').pack(side='left', padx=10, ipady=8, ipadx=20)
    ttk.Button(buttons_frame, text="–û—Ç–º–µ–Ω–∞",
               command=delete_window.destroy, style='Large.TButton').pack(side='left', padx=10, ipady=8, ipadx=20)

def register():
    '''–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'''
    def register_user():
        username = new_username_entry.get()
        password = new_password_entry.get()
        confirm_password = confirm_password_entry.get()
        if not username or not password:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏!")
            return
        if password != confirm_password:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!")
            return
        
        conn = sqlite3.connect('sports_store.db')
        cursor = conn.cursor()
        try:
            cursor.execute('SELECT 1 FROM users WHERE username = ?', (username,))
            if cursor.fetchone():
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                return
            
            hashed_password = hash_password(password)
            cursor.execute('INSERT INTO users (username, password) VALUES (?, ?)',
                         (username, hashed_password))
            conn.commit()
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ 100 –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤!")
            register_window.destroy()
        except sqlite3.Error as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        finally:
            conn.close()

    # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    register_window = tk.Toplevel(root)
    register_window.title("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ VolgaShop")
    register_window.geometry("800x600")
    register_window.minsize(800, 600)
    register_window.configure(bg='#f5f5f5')

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
    window_width = 800
    window_height = 600
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    center_x = int(screen_width/2 - window_width/2)
    center_y = int(screen_height/2 - window_height/2)
    register_window.geometry(f'{window_width}x{window_height}+{center_x}+{center_y}')

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
    style = ttk.Style(register_window)
    style.theme_use('clam')
    #style.configure('TFrame', background='#f5f5f5')
    style.configure('TLabel', background='#f5f5f5', foreground='#333333', font=('Segoe UI', 12))
    style.configure('Large.TLabel', font=('Segoe UI', 14), background='#f5f5f5', foreground='#333333')
    style.configure('Large.TEntry', font=('Segoe UI', 12), padding=8)
    style.configure('Large.TButton', font=('Segoe UI', 12, 'bold'), padding=10,
                  background='#6200ee', foreground='white')

    # –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
    main_frame = ttk.Frame(register_window, style='TFrame')
    main_frame.pack(expand=True, fill='both', padx=100, pady=50)  # –£–º–µ–Ω—å—à–∏–ª pady —Å–≤–µ—Ä—Ö—É

    # –ü–æ–ª—è –≤–≤–æ–¥–∞
    ttk.Label(main_frame, text="–õ–æ–≥–∏–Ω:", style='Large.TLabel').pack(pady=5)
    new_username_entry = ttk.Entry(main_frame, style='Large.TEntry')
    new_username_entry.pack(pady=5, ipady=8, fill='x')

    ttk.Label(main_frame, text="–ü–∞—Ä–æ–ª—å:", style='Large.TLabel').pack(pady=5)
    new_password_entry = ttk.Entry(main_frame, show="*", style='Large.TEntry')
    new_password_entry.pack(pady=5, ipady=8, fill='x')

    ttk.Label(main_frame, text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å:", style='Large.TLabel').pack(pady=5)
    confirm_password_entry = ttk.Entry(main_frame, show="*", style='Large.TEntry')
    confirm_password_entry.pack(pady=5, ipady=8, fill='x')

    # –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—Ç–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç –≤–∏–¥–Ω–∞)
    register_btn = ttk.Button(
        main_frame,
        text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
        command=register_user,
        style='Large.TButton'
    )
    register_btn.pack(pady=20, ipady=8, ipadx=20, fill='x')  # –î–æ–±–∞–≤–∏–ª fill='x' –¥–ª—è —Ä–∞—Å—Ç—è–≥–∏–≤–∞–Ω–∏—è
    
def login():
    '''–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'''
    username = username_entry.get()
    password = password_entry.get()

    if not username or not password:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å!")
        return

    conn = sqlite3.connect('sports_store.db')
    cursor = conn.cursor()
    cursor.execute(
        'SELECT password FROM users WHERE username = ?', (username,))
    result = cursor.fetchone()
    conn.close()

    if result and hash_password(password) == result[0]:
        root.destroy()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        import catalog  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        catalog.show_store_window(username)  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –º–∞–≥–∞–∑–∏–Ω–∞
    else:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!")


# –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
root = tk.Tk()
root.title("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ VolgaShop")
root.geometry("1080x720")
root.minsize(1080, 720)
root.configure(bg="#D9EBFF")

# –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
window_width = 800
window_height = 600
screen_width = root.winfo_screenwidth()
screen_height = root.winfo_screenheight()
center_x = int(screen_width/2 - window_width/2)
center_y = int(screen_height/2 - window_height/2)
root.geometry(f'{window_width}x{window_height}+{center_x}+{center_y}')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
style = ttk.Style(root)
style.theme_use('clam')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
style.configure('TFrame', background='#f5f5f5')
style.configure('TLabel', background='#f5f5f5',
                foreground='#333333', font=('Segoe UI', 12))
style.configure('Large.TLabel', font=('Segoe UI', 14),
                background='#f5f5f5', foreground='#333333')
style.configure('Large.TEntry', font=('Segoe UI', 12), padding=8, bordercolor='#cccccc',
                lightcolor='#cccccc', darkcolor='#cccccc', relief='flat')
style.map('Large.TEntry',
          fieldbackground=[('active', '#ffffff'), ('!disabled', '#ffffff')],
          foreground=[('active', '#333333'), ('!disabled', '#333333')])

style.configure('Large.TButton', font=('Segoe UI', 14, 'bold'), padding=6,
                background="#72a8fe", foreground='white', borderwidth=0,
                focusthickness=3, focuscolor='#72a8fe')
style.map('Large.TButton',
          background=[('active', '#72a8fe'), ('!disabled', '#72a8fe')],
          foreground=[('active', 'white'), ('!disabled', 'white')])

# –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
main_frame = ttk.Frame(root, style='TFrame')
main_frame.pack(expand=True, fill='both', padx=150, pady=150)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
header = ttk.Label(
    main_frame,
    text="VolgaShop",
    style='Large.TLabel',
    font=('Poppins', 18, 'bold'),
    foreground="#360082")
header.pack(pady=(5, 15))


# –ü–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞
ttk.Label(main_frame, text="–õ–æ–≥–∏–Ω:", style='Large.TLabel').pack(pady=3)
username_canvas, username_entry = create_rounded_entry(main_frame)
username_canvas.pack(pady=3)

ttk.Label(main_frame, text="–ü–∞—Ä–æ–ª—å:", style='Large.TLabel').pack(pady=3)
password_canvas, password_entry = create_rounded_entry(main_frame, is_password=True)
password_canvas.pack(pady=3)

# –ö–Ω–æ–ø–∫–∏
buttons_frame = ttk.Frame(main_frame, style='TFrame')
buttons_frame.pack(pady=20)

ttk.Button(buttons_frame, text="–í–æ–π—Ç–∏", command=login,
           style='Large.TButton').pack(side='left', padx=10, ipady=8, ipadx=20)
ttk.Button(buttons_frame, text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", command=register,
           style='Large.TButton').pack(side='left', padx=10, ipady=8, ipadx=20)
ttk.Button(buttons_frame, text="–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", command=delete_account,
           style='Large.TButton').pack(side='left', padx=10, ipady=8, ipadx=20)

init_db()
root.mainloop()
